/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package minorp;

import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author gaurav
 */
public class UpdateCab extends javax.swing.JFrame {

    /**
     * Creates new form UpdateCab
     */
    public UpdateCab() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cid = new javax.swing.JTextField();
        cnm = new javax.swing.JTextField();
        ctp = new javax.swing.JTextField();
        cp = new javax.swing.JTextField();
        updt = new javax.swing.JButton();
        bck = new javax.swing.JButton();
        lgot = new javax.swing.JButton();
        lbcid = new javax.swing.JLabel();
        lbcnam = new javax.swing.JLabel();
        lbctyp = new javax.swing.JLabel();
        lbcpc = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("Cab Id");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 89, 82, 20));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 153));
        jLabel2.setText("Cab Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 134, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 153));
        jLabel3.setText("Cab Type");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 183, 82, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 153));
        jLabel4.setText("Capacity");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 229, 82, -1));

        cid.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cidFocusLost(evt);
            }
        });
        jPanel1.add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 85, 124, -1));

        cnm.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cnm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cnmFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cnmFocusLost(evt);
            }
        });
        jPanel1.add(cnm, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 131, 124, -1));

        ctp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ctp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ctpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ctpFocusLost(evt);
            }
        });
        jPanel1.add(ctp, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 180, 124, -1));

        cp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpFocusLost(evt);
            }
        });
        jPanel1.add(cp, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 226, 124, -1));

        updt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        updt.setText("Update");
        updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updtActionPerformed(evt);
            }
        });
        jPanel1.add(updt, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 290, -1, -1));

        bck.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bck.setText("Back");
        bck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckActionPerformed(evt);
            }
        });
        jPanel1.add(bck, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 405, -1, -1));

        lgot.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lgot.setText("Logout");
        lgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgotActionPerformed(evt);
            }
        });
        jPanel1.add(lgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(486, 0, -1, -1));

        lbcid.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbcid.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbcid, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 85, -1, -1));

        lbcnam.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbcnam.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbcnam, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 131, -1, -1));

        lbctyp.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbctyp.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbctyp, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, -1, -1));

        lbcpc.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbcpc.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbcpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 226, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 153));
        jLabel5.setText("UPDATE CAB DETAILS");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public int ac;
class validatecabupdt
{
    private boolean validatecidu()
    {
        String a;
        int n;
        n=Integer.parseInt(cid.getText());
        a = cid.getText();
        String pattern = "(\\d{3})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((100<n) && (n<200)))
            {
                lbcid.setText("Invalid");
                ac++;
                return true;
            }
            else
                return false;
        } 
        else 
        {
            lbcid.setText("Invalid");
            ac++;
            return true;
        }
    }
    private void validatenameu()
    {
        String a;
        int n;
        n=cnm.getText().length();
        a = cnm.getText();
        String pattern = "[a-zA-Z]*";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((2<n) && (n<40)))
            {
                lbcnam.setText("Invalid");
                ac++;
            }
        } 
        else 
        {
            lbcnam.setText("Invalid");
            ac++;
        }
    }
    void validatetypu()
    {
        String ct;
        ct=ctp.getText();
        if(!(ct.equals("Ac") || ct.equals("Non Ac")))
            {
                lbctyp.setText("Invalid");
                ac++;
            }
    }
    private void validatecpcu()
    {
        String a;
        int n;
        n=Integer.parseInt(cp.getText());
        a = cp.getText();
        String pattern = "(\\d{1})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((3<n) && (n<10)))
            {
                lbcpc.setText("Invalid");
                ac++;
            }
        } 
        else 
        {
            lbcpc.setText("Invalid");
            ac++;
        }
    }
}
class update
{
    int cd,cpc;
    String cname,ctyp,qry;
    
    void show()
    {
        try
            {                
                cd=Integer.parseInt(cid.getText());
                Connection cn;
                Statement st;
                ResultSet rs;
                cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab","root","GAUsing@2011");
                st=cn.createStatement();
                String query;
                query = "select * from cab where cid="+cd +"";
                rs=st.executeQuery(query);
               if(rs.next())
                {
                   cnm.setText(rs.getString(2));
                   ctp.setText(rs.getString(3));
                   cp.setText(rs.getString(4));
                }
                cn.close();
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Error : "+ex);
            }
    }
    void updt()
    {
        cid.setEditable(false);
        cd=Integer.parseInt(cid.getText());
        cname=cnm.getText();
        ctyp=ctp.getText();
        cpc=Integer.parseInt(cp.getText());
        try
        {
            Connection cn;
            Statement st;
            cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab","root","GAUsing@2011");
            st=cn.createStatement();
            String query;
            query = "update cab set cname='"+ cname +"',ctype='"+ ctyp +"',capacity="+ cpc +" where cid="+cd+"";
            int re=st.executeUpdate(query);
            if(re>0)
            {
            JOptionPane.showMessageDialog(null, "Cab details Updated Successfully");
            }
            cn.close();
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error : "+ex);
        }
    }
    void clear()
    {
        cid.setText("");
        cnm.setText("");
        ctp.setText("");
        cp.setText("");
    }
}
    private void updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updtActionPerformed
        update ob=new update();
        int dialogbt=JOptionPane.YES_NO_OPTION;
        dialogbt=JOptionPane.showConfirmDialog(null,"Do you want to confirm ?","Confirmation",dialogbt);
        if(dialogbt==JOptionPane.YES_NO_OPTION)
        {
            if(ac!=0)
            {
                JOptionPane.showMessageDialog(null,"One or more fields are invalid");
            }
            else
            {
                ob.updt();
               ob.clear();
            }
            this.setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Cab Details not updated");
            this.setVisible(true);
            ob.clear();
        }
    }//GEN-LAST:event_updtActionPerformed

    private void bckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckActionPerformed
        Cab cb=new Cab();
        cb.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bckActionPerformed

    private void lgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgotActionPerformed
        Login lg=new Login();
        int dialogbt=JOptionPane.YES_NO_OPTION;
        dialogbt=JOptionPane.showConfirmDialog(null,"Do you want to Logout?","Confirmation",dialogbt);
        if(dialogbt==JOptionPane.YES_NO_OPTION)
        {
            lg.setVisible(true);
            this.setVisible(false);
        }
        else
        {
            this.setVisible(true);
        }
    }//GEN-LAST:event_lgotActionPerformed

    private void ctpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ctpFocusLost
        if(ctp.getText().length()==0)
        {
            lbctyp.setText("Required");
            ac++;
        }
        else
        {
            validatecabupdt vcu=new validatecabupdt();
            vcu.validatetypu();
        }       
    }//GEN-LAST:event_ctpFocusLost

    private void cpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpFocusLost
        if(cp.getText().length()==0)
        {
            lbcpc.setText("Required");
            ac++;
        }
        else
        {
            validatecabupdt vc=new validatecabupdt();
            vc.validatecpcu();
        }
    }//GEN-LAST:event_cpFocusLost

    private void cidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cidFocusGained
        lbcid.setText("");
        ac=0;
    }//GEN-LAST:event_cidFocusGained

    private void cidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cidFocusLost
        update ob=new update();
        if(cid.getText().length()==0)
        {
            lbcid.setText("Required");
            ac++;
        }
        else
        {
            validatecabupdt vdu=new validatecabupdt();
            if(vdu.validatecidu())
            {
                
            }
            else
            {
                ob.show();
                cid.setEditable(false);
            }
        }            
    }//GEN-LAST:event_cidFocusLost

    private void cnmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cnmFocusGained
        lbcnam.setText("");
        ac=0;
    }//GEN-LAST:event_cnmFocusGained

    private void cnmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cnmFocusLost
        if(cnm.getText().length()==0)
        {
            lbcnam.setText("Required");
            ac++;
        }
        else
        {
            validatecabupdt vcu=new validatecabupdt();
            vcu.validatenameu();
        }
    }//GEN-LAST:event_cnmFocusLost

    private void ctpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ctpFocusGained
        lbctyp.setText("");
        ac=0;
    }//GEN-LAST:event_ctpFocusGained

    private void cpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpFocusGained
        lbcpc.setText("");
        ac=0;
    }//GEN-LAST:event_cpFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateCab().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bck;
    private javax.swing.JTextField cid;
    private javax.swing.JTextField cnm;
    private javax.swing.JTextField cp;
    private javax.swing.JTextField ctp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbcid;
    private javax.swing.JLabel lbcnam;
    private javax.swing.JLabel lbcpc;
    private javax.swing.JLabel lbctyp;
    private javax.swing.JButton lgot;
    private javax.swing.JButton updt;
    // End of variables declaration//GEN-END:variables
}
