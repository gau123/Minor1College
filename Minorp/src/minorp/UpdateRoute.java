/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package minorp;

import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author gaurav
 */
public class UpdateRoute extends javax.swing.JFrame {

    /**
     * Creates new form UpdateRoute
     */
    public UpdateRoute() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rid = new javax.swing.JTextField();
        src = new javax.swing.JTextField();
        dest = new javax.swing.JTextField();
        dstnc = new javax.swing.JTextField();
        fre = new javax.swing.JTextField();
        updt = new javax.swing.JButton();
        bck = new javax.swing.JButton();
        lgot = new javax.swing.JButton();
        lbdstnc = new javax.swing.JLabel();
        lbfre = new javax.swing.JLabel();
        lbrid = new javax.swing.JLabel();
        lbsrc = new javax.swing.JLabel();
        lbdest = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("Route Id");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 129, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 153));
        jLabel2.setText("Source");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 172, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 153));
        jLabel3.setText("Destination");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 218, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 153));
        jLabel4.setText("Distance");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 264, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 153));
        jLabel5.setText("Fare");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 313, -1, -1));

        rid.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ridFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ridFocusLost(evt);
            }
        });
        jPanel1.add(rid, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 123, 127, -1));

        src.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        src.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                srcFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                srcFocusLost(evt);
            }
        });
        jPanel1.add(src, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 169, 127, -1));

        dest.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                destFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                destFocusLost(evt);
            }
        });
        jPanel1.add(dest, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 215, 127, -1));

        dstnc.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dstnc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dstncFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dstncFocusLost(evt);
            }
        });
        jPanel1.add(dstnc, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 261, 127, -1));

        fre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                freFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                freFocusLost(evt);
            }
        });
        jPanel1.add(fre, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 307, 127, -1));

        updt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        updt.setText("Update");
        updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updtActionPerformed(evt);
            }
        });
        jPanel1.add(updt, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 353, -1, -1));

        bck.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bck.setText("Back");
        bck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckActionPerformed(evt);
            }
        });
        jPanel1.add(bck, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 405, -1, -1));

        lgot.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lgot.setText("Logout");
        lgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgotActionPerformed(evt);
            }
        });
        jPanel1.add(lgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 0, -1, -1));

        lbdstnc.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbdstnc.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbdstnc, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 261, -1, 20));

        lbfre.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbfre.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbfre, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 307, -1, -1));

        lbrid.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbrid.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 123, -1, -1));

        lbsrc.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbsrc.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbsrc, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 169, -1, -1));

        lbdest.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbdest.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(lbdest, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 215, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 153));
        jLabel6.setText("UPDATE ROUTE");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public int c=0;
class validaterouteu
{
    private boolean validridu()
    {
        String a;
        int n;
        n=Integer.parseInt(rid.getText());
        a = rid.getText();
        String pattern = "(\\d{3})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((200<n) && (n<299)))
            {
                lbrid.setText("Invalid");
                c++;
                return true;
            }
            else
                return false;
        } 
        else 
        {
            lbrid.setText("Invalid");
            c++;
            return true;
        }
    }
    private void validsrcu()
    {
        String a;
        int n;
        n=src.getText().length();
        a = src.getText();
        String pattern = "[a-zA-Z\\s]*";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((2<n) && (n<40)))
            {
                lbsrc.setText("Invalid");
                c++;
            }
        } 
        else 
        {
            lbsrc.setText("Invalid");
            c++;
        }
    }
    private void validdestu()
    {
        String a;
        int n;
        n=src.getText().length();
        a = src.getText();
        String pattern = "[a-zA-Z\\s]*";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((2<n) && (n<40)))
            {
                lbdest.setText("Invalid");
                c++;
            }
        } 
        else 
        {
            lbdest.setText("Invalid");
            c++;
        }
    }
    private void validdstncu()
    {
        String a;
        int n;
        n=Integer.parseInt(dstnc.getText());
        a = dstnc.getText();
        String pattern = "(\\d{2,3})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((10<n) && (n<150)))
            {
                lbdstnc.setText("Invalid");
                c++;
                System.out.println(c);
            }
        } 
        else 
        {
            lbdstnc.setText("Invalid");
            c++;
        }
    }
    private void validfareu()
    {
        String a;
        int n;
        n=Integer.parseInt(fre.getText());
        a = fre.getText();
        String pattern = "(\\d{3,4})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((150<n) && (n<5000)))
            {
                lbfre.setText("Invalid");
                c++;
                System.out.println(c);
            }
        } 
        else 
        {
            lbfre.setText("Invalid");
            c++;
        }
    }
}
class update
{
    int rd,dtn,fr;
    String sor,des,qry;
    void show()
    {
        rd=Integer.parseInt(rid.getText());
        try
        {
            Connection cn;
            Statement st;
            ResultSet rs;
            cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab","root","GAUsing@2011");
            st=cn.createStatement();
            qry="Select * from route where rid="+rd+"";
            rs=st.executeQuery(qry);
            if(rs.next())
            {
                src.setText(rs.getString(2));
                dest.setText(rs.getString(3));
                dstnc.setText(rs.getString(4));
                fre.setText(rs.getString(5));
            }
            cn.close();
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,"Error : "+ex);
        }
    }
    void updt()
    {
        rd=Integer.parseInt(rid.getText());
        sor=src.getText();
        des=dest.getText();
        dtn=Integer.parseInt(dstnc.getText());
        fr=Integer.parseInt(fre.getText());
        try
            {
                Connection cn;
                Statement st;
                cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/cab","root","GAUsing@2011");
                st=cn.createStatement();
                String query;
                query = "update route set source='"+ sor +"',dest='"+ des +"',distance="+ dtn +",fare="+fr +" where rid="+rd+"";
                int re=st.executeUpdate(query);
                if(re>0)
                {
                    JOptionPane.showMessageDialog(null,"Route details updated successfully");
                }
                cn.close();
            }catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Error : "+ex);
            }
        
    }
    void clear()
    {
        rid.setText("");
        src.setText("");
        dest.setText("");
        dstnc.setText("");
        fre.setText("");
    }
}
    private void updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updtActionPerformed
        update ob=new update();
        int dialogbt=JOptionPane.YES_NO_OPTION;
        dialogbt=JOptionPane.showConfirmDialog(null,"Do you want to confirm ?","Confirmation",dialogbt);
        if(dialogbt==JOptionPane.YES_NO_OPTION)
        {
            if(c!=0)
            {
                JOptionPane.showMessageDialog(null,"One or more fields are invalid");
            }
            else
            {
                ob.updt();
                ob.clear();
            }
            this.setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Route Details not updated");
            this.setVisible(true);
            ob.clear();
        }
    }//GEN-LAST:event_updtActionPerformed

    private void bckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckActionPerformed
       Route rt=new Route();
        rt.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bckActionPerformed

    private void lgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgotActionPerformed
        Login lg=new Login();
        int dialogbt=JOptionPane.YES_NO_OPTION;
        dialogbt=JOptionPane.showConfirmDialog(null,"Do you want to Logout?","Confirmation",dialogbt);
        if(dialogbt==JOptionPane.YES_NO_OPTION)
        {
            lg.setVisible(true);
            this.setVisible(false);
        }
        else
        {
            this.setVisible(true);
        }
    }//GEN-LAST:event_lgotActionPerformed

    private void dstncFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dstncFocusLost
        if(dstnc.getText().length()==0)
        {
            lbdstnc.setText("Required");
            c++;
        }
        else
        {
            validaterouteu vr=new validaterouteu();
            vr.validdstncu();
        }     
    }//GEN-LAST:event_dstncFocusLost

    private void freFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_freFocusLost
        if(fre.getText().length()==0)
        {
            lbfre.setText("Required");
            c++;
        }
        else
        {
            validaterouteu vru=new validaterouteu();
            vru.validfareu();
        }      
    }//GEN-LAST:event_freFocusLost

    private void dstncFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dstncFocusGained
        lbdstnc.setText("");
        c=0;
    }//GEN-LAST:event_dstncFocusGained

    private void freFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_freFocusGained
        lbfre.setText("");
        c=0;
    }//GEN-LAST:event_freFocusGained

    private void ridFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ridFocusLost
        update ob=new update();
        if(rid.getText().length()==0)
        {
            lbrid.setText("Required");
            c++;
        }
        else
        {
            validaterouteu vdu=new validaterouteu();
            if(vdu.validridu())
            {
                
            }
            else
            {
                ob.show();
                rid.setEditable(false);
            }
        }
    }//GEN-LAST:event_ridFocusLost

    private void srcFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_srcFocusLost
        if(src.getText().length()==0)
        {
            lbsrc.setText("Required");
            c++;
        }
        else
        {
            validaterouteu vr=new validaterouteu();
            vr.validsrcu();
        }
    }//GEN-LAST:event_srcFocusLost

    private void destFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_destFocusLost
        if(dest.getText().length()==0)
        {
            lbdest.setText("Required");
            c++;
        }            
        else
        {
            validaterouteu vr=new validaterouteu();
            vr.validdestu();
        }
    }//GEN-LAST:event_destFocusLost

    private void ridFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ridFocusGained
        lbrid.setText("");
        c=0;
    }//GEN-LAST:event_ridFocusGained

    private void srcFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_srcFocusGained
        lbsrc.setText("");
        c=0;
    }//GEN-LAST:event_srcFocusGained

    private void destFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_destFocusGained
        lbdest.setText("");
        c=0;
    }//GEN-LAST:event_destFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateRoute().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bck;
    private javax.swing.JTextField dest;
    private javax.swing.JTextField dstnc;
    private javax.swing.JTextField fre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbdest;
    private javax.swing.JLabel lbdstnc;
    private javax.swing.JLabel lbfre;
    private javax.swing.JLabel lbrid;
    private javax.swing.JLabel lbsrc;
    private javax.swing.JButton lgot;
    private javax.swing.JTextField rid;
    private javax.swing.JTextField src;
    private javax.swing.JButton updt;
    // End of variables declaration//GEN-END:variables
}
