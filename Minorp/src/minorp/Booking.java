
package minorp;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Date;
import java.io.*;
import java.net.URL;
import java.net.URLEncoder;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author gaurav
 */
public class Booking extends javax.swing.JFrame {

    /**
     * Creates new form Booking
     */
    public Booking() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        cname2 = new javax.swing.JTextField();
        tot1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bid = new javax.swing.JTextField();
        phno = new javax.swing.JTextField();
        cadrs = new javax.swing.JTextField();
        freq = new javax.swing.JButton();
        happy = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        dt = new javax.swing.JTextField();
        lbcnam = new javax.swing.JLabel();
        lbbid = new javax.swing.JLabel();
        lbcadrs = new javax.swing.JLabel();
        lbpno = new javax.swing.JLabel();
        lbdoj = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fre = new javax.swing.JTextField();
        src = new javax.swing.JComboBox();
        dest = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        dstnc = new javax.swing.JTextField();
        dsply = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        dscnt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        hpy = new javax.swing.JTextField();
        calc = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        tot = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        dd = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        dname = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        dphn = new javax.swing.JTextField();
        dtls = new javax.swing.JButton();
        bck = new javax.swing.JButton();
        bok = new javax.swing.JButton();
        lgot = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Customer Address");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "CUSTOMER DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("Customer Name");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 39, -1, -1));

        cname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cnameFocusLost(evt);
            }
        });
        jPanel2.add(cname, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 37, 122, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 153));
        jLabel2.setText("Phone No");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 87, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 153));
        jLabel3.setText("Customer Address");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 87, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 153));
        jLabel5.setText("Booking Id");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 39, -1, -1));

        bid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bidFocusLost(evt);
            }
        });
        jPanel2.add(bid, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 37, 108, 30));

        phno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phnoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phnoFocusLost(evt);
            }
        });
        jPanel2.add(phno, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 85, 108, 30));

        cadrs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cadrsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cadrsFocusLost(evt);
            }
        });
        jPanel2.add(cadrs, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 85, 122, 30));

        freq.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        freq.setText("Freq User");
        freq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freqActionPerformed(evt);
            }
        });
        jPanel2.add(freq, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 141, -1, -1));

        happy.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        happy.setText("Happy Hours");
        happy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                happyActionPerformed(evt);
            }
        });
        jPanel2.add(happy, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 141, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 153));
        jLabel6.setText("Date");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 136, -1, -1));

        dt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dtFocusLost(evt);
            }
        });
        jPanel2.add(dt, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 133, 131, -1));

        lbcnam.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbcnam.setForeground(new java.awt.Color(51, 255, 255));
        jPanel2.add(lbcnam, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        lbbid.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbbid.setForeground(new java.awt.Color(51, 255, 255));
        jPanel2.add(lbbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, -1, -1));

        lbcadrs.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbcadrs.setForeground(new java.awt.Color(51, 255, 255));
        jPanel2.add(lbcadrs, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        lbpno.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbpno.setForeground(new java.awt.Color(51, 255, 255));
        jPanel2.add(lbpno, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, -1));

        lbdoj.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbdoj.setForeground(new java.awt.Color(51, 255, 255));
        jPanel2.add(lbdoj, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 144, -1, 20));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, 696, 189));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ROUTE INFORMATION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 153));
        jLabel7.setText("Source");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 33, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 153));
        jLabel8.setText("Fare");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 83, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 153));
        jLabel9.setText("Destination");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 33, -1, -1));

        fre.setEditable(false);
        jPanel3.add(fre, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 81, 132, 30));

        src.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gandhi Nagar ", "Ghaziabad", " " }));
        jPanel3.add(src, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 36, 126, -1));

        dest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Raj Nagar", "Noida" }));
        jPanel3.add(dest, new org.netbeans.lib.awtextra.AbsoluteConstraints(546, 36, 126, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 153));
        jLabel10.setText("Distance");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 83, -1, -1));

        dstnc.setEditable(false);
        jPanel3.add(dstnc, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 81, 132, 30));

        dsply.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dsply.setText("Show");
        dsply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsplyActionPerformed(evt);
            }
        });
        jPanel3.add(dsply, new org.netbeans.lib.awtextra.AbsoluteConstraints(455, 177, -1, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 153));
        jLabel14.setText("Discount");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 131, -1, -1));

        dscnt.setEditable(false);
        jPanel3.add(dscnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 129, 132, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 153));
        jLabel15.setText("Happy Hours");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 131, -1, -1));

        hpy.setEditable(false);
        jPanel3.add(hpy, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 129, 132, 30));

        calc.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        calc.setText("Calculate");
        calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcActionPerformed(evt);
            }
        });
        jPanel3.add(calc, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 177, -1, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 153));
        jLabel16.setText("Total Fare");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 185, -1, -1));

        tot.setEditable(false);
        jPanel3.add(tot, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 177, 132, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 246, 696, 217));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DRIVER DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 153));
        jLabel11.setText("Driver Id");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 35, -1, -1));

        dd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "dr101" }));
        dd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddActionPerformed(evt);
            }
        });
        jPanel4.add(dd, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 38, 81, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 153));
        jLabel12.setText("Driver Name");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 35, -1, -1));

        dname.setEditable(false);
        jPanel4.add(dname, new org.netbeans.lib.awtextra.AbsoluteConstraints(524, 33, 132, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 153));
        jLabel13.setText("Phone No");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 85, -1, -1));

        dphn.setEditable(false);
        jPanel4.add(dphn, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 83, 132, 30));

        dtls.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dtls.setText("Details");
        dtls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtlsActionPerformed(evt);
            }
        });
        jPanel4.add(dtls, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 81, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 469, 696, 126));

        bck.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bck.setText("Back");
        bck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckActionPerformed(evt);
            }
        });
        jPanel1.add(bck, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 638, -1, -1));

        bok.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bok.setText("Book");
        bok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bokActionPerformed(evt);
            }
        });
        jPanel1.add(bok, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 606, -1, -1));

        lgot.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lgot.setText("Logout");
        lgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgotActionPerformed(evt);
            }
        });
        jPanel1.add(lgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(627, 0, -1, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 153));
        jLabel17.setText("BOOK CABS HERE");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public int bk;
 class validatebooking
 {
    private void validatedate() 
    {
        int f=1,g=1,yr;
        String a,year,month,day;
        a =dt.getText();
        if(a.charAt(4)=='-' && a.charAt(7)=='-')
        {
            year=a.substring(0,4);
            month=a.substring(5,7);
            day=a.substring(8);
            yr=Integer.parseInt(year);
            if (month.equals("04")||month.equals("06")||month.equals("07")||month.equals("09")||
              month.equals("11"))
            {
                g=1;
                String patternd = "^((0|1|2)(0|1|2|3|4|5|6|7|8|9))$";
                Pattern r1 = Pattern.compile(patternd);
                Matcher m1 = r1.matcher(day);
                if (m1.matches( )||day.equals("30"))
                {
                    g=1;
                }
                 else
                {
                    f=0;
                }
          // 30 days
            }
            else if (month.equals("01")||month.equals("03")||month.equals("05")||month.equals("07")
              ||month.equals("08")||month.equals("10")||month.equals("12"))
            {
                g=1;
                String patternd = "^((0|1|2)(0|1|2|3|4|5|6|7|8|9))$";
                Pattern r1 = Pattern.compile(patternd);
                Matcher m1 = r1.matcher(day);
                if (m1.matches( )||day.equals("30")||day.equals("31"))
                {
                    g=1;
                }
                else
                {
                    f=0;
                }
          //31 days
            }
            else if (month.equals("02"))
            {
                g=1;
                int c;
                c=Integer.parseInt(year);
                if ((c%4==0 && c%100==0)||(c%400)==0)
                {
                    String patternd = "^((0|1|2)(0|1|2|3|4|5|6|7|8|9))$";
                    Pattern r1 = Pattern.compile(patternd);
                    Matcher m1 = r1.matcher(day);
                    if (m1.matches( ))
                    {
                        g=1;
                    }
                    else
                    {
                        f=0;
                    }
                }
                else
                {
                    String patternd = "^((0|1|2)(0|1|2|3|4|5|6|7|8))$";
                    Pattern r1 = Pattern.compile(patternd);
                    Matcher m1 = r1.matcher(day);
                    if (m1.matches( )||day.equals("09")||day.equals("19"))
                    {
                  //  JOptionPane.showMessageDialog(null,"Valid Day");
                    }
                    else
                    {
                        f=0;
                    }
                }
            }
            else
            {
                f=0;
            }
            String patterny = "^((20)\\d{2})$";
            Pattern r = Pattern.compile(patterny);
            Matcher m = r.matcher(year);
            if (m.matches( ))
            {
                if(!(yr<=2020))
                {
                    f=0;
                }
                else
                    g=1;
            }
            else
            {
                f=0;
            }
            if (f==0)
            {
                lbdoj.setText("Invalid");
                bk++;
            }
            if (g==1 && f!=0)
            {
           // JOptionPane.showMessageDialog(null,"Valid date");
            }
        }
        else
        {
            lbdoj.setText("Invalid");
            bk++;        
        }
    }
    private void validatebid()
    {
        String a;
        int n;
        n=Integer.parseInt(bid.getText());
        a = bid.getText();
        String pattern = "(\\d{4})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((2000<=n) && (n<=3999)))
            {
                lbbid.setText("Invalid");
                bk++;
            }
        } 
        else 
        {
            lbbid.setText("Invalid");
            bk++;
        }
    }
    private void validatecnam()
    {
        String a;
        int n;
        n=cname.getText().length();
        a = cname.getText();
        String pattern = "[a-zA-Z\\s]*";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            if(!((2<n) && (n<40)))
            {
                lbcnam.setText("Invalid");
                bk++;
            }
        } 
        else 
        {
            lbcnam.setText("Invalid");
            bk++;
        }
    }
    private void validatepno()
    {
        String a;
        a = phno.getText();
        String pattern = "(\\d{10})";
        Pattern r = Pattern.compile(pattern);
        Matcher m = r.matcher(a);
        if (m.matches( )) 
        {
            //System.out.println("Found value: ");
        } 
        else 
        {
            lbpno.setText("Invalid");
            bk++;
        }
    }
 }
    class book 
    {
        long dphno,cphn;
        int bkid, dtnc, fr,dstance,fare;
        String sorc, dst, cnam, dnam, cadr,source,destn,bdat,drid;
        void msg()
        {
            int bd,fr;
            long cno,dno;
            String dnam;
            cno=Long.parseLong(phno.getText());
            dno=Long.parseLong(dphn.getText());
            fr=Integer.parseInt(fre.getText());
            dnam=dname.getText();
            bd=Integer.parseInt(bid.getText());
            String email = "gaurav.singhal25@gmail.com"; //http://www.indyarocks.com/ 
            String user = "rac123";    
            String pass = "laptop123";
            String number = ""+cno;    
            String msg = "Booking Id: "+bd+" Driver Name: "+dnam+" No.: "+dno;    
            try
            {
                try 
                {
                    String mURL;
                    mURL = "http://www.onl9class.com/smsapi/smsir.php?email=" + email + "&user=" + user + "&pass=" + pass + "&number=" + number + "&msg=" + URLEncoder.encode(msg, "UTF-8");
                    URL url = new URL(mURL);
                    BufferedReader reader = null;            
                    reader = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));
                    String aline;
                    aline = reader.readLine();
                    while (aline != "") 
                    {     
                        JOptionPane.showMessageDialog(null,""+aline);
                        break;
                    }
                    if (reader != null) 
                    {
                        try 
                        {                    
                            reader.close();                    
                        } finally  
                        {
                            System.out.println("Error ");
                        }
                    }            
                } catch (Exception ex) 
                    {
                        System.out.println("Error "+ex);
                    }
            } catch(Exception ex)
                {
       
                }
        }
        void bok() 
        {
            String qry;
            int a;
            bkid = Integer.parseInt(bid.getText());
            cnam = cname.getText();
            cadr = cadrs.getText();
            cphn = Long.parseLong(phno.getText());
            a=phno.getText().length();
            sorc = (String) src.getSelectedItem();
            dtnc = Integer.parseInt(dstnc.getText());
            fr = Integer.parseInt(fre.getText());
            dst = (String) dest.getSelectedItem();
            drid = (String) dd.getSelectedItem();
            dnam = dname.getText();
            dphno = Long.parseLong(dphn.getText());
            bdat=dt.getText();
            try 
            {
                Connection cn;
                Statement st;
                int rs;
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                qry = "insert into booking(bkid,bdate,cname,cadrs,cphno,src,dest,fare,dstnc,did,dname,dphno) values "
                      + "(" + bkid + ",'"+bdat+"','" + cnam + "','" + cadr + "',"+cphn+",'" + sorc + "',"
                      + "'" + dst + "'," + fr + "," + dtnc + ",'" + drid + "','" + dnam + "',"+dphno+")";
                rs = st.executeUpdate(qry);
                if (rs > 0) 
                {
                    JOptionPane.showMessageDialog(null, "Booking Done Successfully");
                }
                cn.close();
            } catch (Exception ex) 
            {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
        void shw() 
        {
            source= (String) src.getSelectedItem();
            destn = (String) dest.getSelectedItem();
            int d,m,y;
            String dte;
            try 
            {
                Connection cn;
                Statement st;
                ResultSet rs;
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select distance,fare from route where source='"+source+"' and dest='"+destn+"'";
                rs = st.executeQuery(query);
                if (rs.next()) 
                {
                    dstnc.setText(rs.getString(1));
                    fre.setText(rs.getString(2));
                }
                cn.close();
            } catch (Exception ex) 
            {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
        void setdid()
        {
            try 
            {
                Connection cn;
                Statement st;
                ResultSet rs;
                String dte;
                dte=dt.getText();
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select did from driver where did not in (select did from booking where bdate='"+dte+"')";
                rs = st.executeQuery(query);
                dd.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
                while (rs.next()) 
                {
                        dd.addItem(rs.getString(1));
                }
                cn.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
        void clear() 
        {
            cname.setText("");
            bid.setText("");
            cadrs.setText("");
            phno.setText("");
            dt.setText("");
            dstnc.setText("");
            fre.setText("");
            dscnt.setText("");
            hpy.setText("");
            dname.setText("");
            dphn.setText("");
        }
    }
    class set
    {
        void setsrc()
        {
            try 
            {
                Connection cn;
                Statement st;
                ResultSet rs;
                String dte;
                dte=dt.getText();
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select distinct(source) from route";
                rs = st.executeQuery(query);
                src.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
                while (rs.next()) 
                {
                        src.addItem(rs.getString(1));
                }
                cn.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
        void setdest()
        {
            try 
            {
                Connection cn;
                Statement st;
                ResultSet rs;
                String dte;
                dte=dt.getText();
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select distinct(dest) from route";
                rs = st.executeQuery(query);
                dest.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
                while (rs.next()) 
                {
                        dest.addItem(rs.getString(1));
                }
                cn.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
    }
    private void dsplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsplyActionPerformed
     book sw=new book();
     if(bk!=0)
         JOptionPane.showMessageDialog(null,"One or more Invalid Field");
     else
     {
         sw.shw();
         sw.setdid();
     }     
    }//GEN-LAST:event_dsplyActionPerformed
class detail 
    {
        String dnm,drid;
        int phno;
        void dtl() 
        {
            drid = (String) dd.getSelectedItem();
            try 
            {
                Connection cn;
                Statement st;
                ResultSet rs;
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select dname,phno from driver where did='"+drid+"'";
                rs = st.executeQuery(query);
                if (rs.next()) 
                {
                    dname.setText(rs.getString(1));
                    dphn.setText(rs.getString(2));
                }
                cn.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
        }
    }
    private void dtlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtlsActionPerformed
        if(bk!=0)
        {
            JOptionPane.showMessageDialog(null,"One or more Fields are invalid");
        }
        else
        {
            detail dt=new detail();
            dt.dtl();
        }        
    }//GEN-LAST:event_dtlsActionPerformed

    private void ddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddActionPerformed

    private void bckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckActionPerformed
        CustMan cm=new CustMan();
        cm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bckActionPerformed
class discount
{
    int cnt,dsc;
    long cphn;
    String cnm;
    void fre()
    {
        try 
            {
                cphn=Long.parseLong(phno.getText());
                cnm=cname.getText();
                Connection cn;
                Statement st;
                ResultSet rs;
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cab", "root", "GAUsing@2011");
                st = cn.createStatement();
                String query;
                query = "select count(*) from booking where cname='"+cnm+"' and cphno="+cphn+"";
                rs = st.executeQuery(query);
                if (rs.next()) 
                {
                    cnt=Integer.parseInt(rs.getString(1));
                    if(cnt>2)
                    {
                        dsc=10;
                        JOptionPane.showMessageDialog(null,"Freq User with Discount= "+dsc+"%");
                        dscnt.setText(""+dsc);
                    }
                    else
                    {
                        dsc=0;
                        JOptionPane.showMessageDialog(null, "New User");
                        dscnt.setText(""+dsc);
                    }
                }
                cn.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error : " + ex);
            }
    }
    void calculate()
    {
        int far,dcnt,hd;
        int totdis;
        String hap;
        hap=hpy.getText();
        float total;
        if("Yes".equals(hap))
        {
            hd=10;
        }
        else
        {
            hd=0;
        }
        dcnt=Integer.parseInt(dscnt.getText());
        totdis=dcnt+hd;
        far=Integer.parseInt(fre.getText());
        total=far-far*((float)totdis/100);
        tot.setText(""+total);
    }
    void curr() //To get current time
    {
        Date date = new Date();
        if(date.getHours()>11 && date.getHours()<18)
        {
            JOptionPane.showMessageDialog(null, "Congratulations!!! Happy Hours");
            hpy.setText("Yes");
        }
        else
        {
            hpy.setText("No");
        }
    }
}
    private void freqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freqActionPerformed
        discount fq=new discount();
        if(bk!=0)
            JOptionPane.showMessageDialog(null,"One or more Invalid Field");
        else
            fq.fre();
    }//GEN-LAST:event_freqActionPerformed

    private void calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcActionPerformed
    discount fq=new discount();
    fq.calculate();
    }//GEN-LAST:event_calcActionPerformed

    private void happyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_happyActionPerformed
      discount dc=new discount();
      dc.curr();
    }//GEN-LAST:event_happyActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        set st=new set();
        st.setdest();
        st.setsrc();
    }//GEN-LAST:event_formWindowOpened

    private void bokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bokActionPerformed
        book ob = new book();
        int dialogbt = JOptionPane.YES_NO_OPTION;
        dialogbt = JOptionPane.showConfirmDialog(null, "Do you want to confirm ?", "Confirmation", dialogbt);
        if (dialogbt == JOptionPane.YES_NO_OPTION) 
        {
            if(bk!=0)
            {
                JOptionPane.showMessageDialog(null,"One or more Invalid Field");
            }
            else
            {
                ob.bok();
                ob.msg();
                ob.clear();
            }
            this.setVisible(true);
        } else 
        {
            JOptionPane.showMessageDialog(null, "Booking Not Done");
            this.setVisible(true);
            ob.clear();
        }       
    }//GEN-LAST:event_bokActionPerformed

    private void lgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgotActionPerformed
        Login lg=new Login();
        int dialogbt=JOptionPane.YES_NO_OPTION;
        dialogbt=JOptionPane.showConfirmDialog(null,"Do you want to Logout?","Confirmation",dialogbt);
        if(dialogbt==JOptionPane.YES_NO_OPTION)
        {
            lg.setVisible(true);
            this.setVisible(false);
        }
        else
        {
            this.setVisible(true);
        }
    }//GEN-LAST:event_lgotActionPerformed

    private void phnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phnoFocusLost
        if(phno.getText().length()==0)
        {
            lbpno.setText("Required");
            bk++;
        }    
        else 
        {
            validatebooking vb=new validatebooking();
            vb.validatepno();
        }
            
    }//GEN-LAST:event_phnoFocusLost

    private void dtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dtFocusLost
        if(dt.getText().length()==0)
        {
            lbdoj.setText("Required");
            bk++;
        }
        else
        {
            validatebooking v=new validatebooking();
            v.validatedate();
        }
    }//GEN-LAST:event_dtFocusLost

    private void cnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cnameFocusGained
        lbcnam.setText("");
        bk=0;
    }//GEN-LAST:event_cnameFocusGained

    private void cnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cnameFocusLost
        if(cname.getText().length()==0)
        {
            lbcnam.setText("Required");
                    bk++;
        }
        else
        {
            validatebooking v=new validatebooking();
            v.validatecnam();
        }            
    }//GEN-LAST:event_cnameFocusLost

    private void bidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bidFocusGained
        lbbid.setText("");
        bk=0;
    }//GEN-LAST:event_bidFocusGained

    private void bidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bidFocusLost
        if(bid.getText().length()==0)
        {
            lbbid.setText("Required");
            bk++;
        }
        else
        {
            validatebooking v=new validatebooking();
            v.validatebid();
        }
    }//GEN-LAST:event_bidFocusLost

    private void cadrsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cadrsFocusGained
        lbcadrs.setText("");
        bk=0;
    }//GEN-LAST:event_cadrsFocusGained

    private void cadrsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cadrsFocusLost
        if(cadrs.getText().length()==0)
        {
            lbcadrs.setText("Required");
            bk++;
        } 
        else
        {
            validatebooking v=new validatebooking();
        }
        
    }//GEN-LAST:event_cadrsFocusLost

    private void phnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phnoFocusGained
        lbpno.setText("");
        bk=0;
    }//GEN-LAST:event_phnoFocusGained

    private void dtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dtFocusGained
        lbdoj.setText("");
        bk=0;
    }//GEN-LAST:event_dtFocusGained
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Booking().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bck;
    private javax.swing.JTextField bid;
    private javax.swing.JButton bok;
    private javax.swing.JTextField cadrs;
    private javax.swing.JButton calc;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cname2;
    private javax.swing.JComboBox dd;
    private javax.swing.JComboBox dest;
    private javax.swing.JTextField dname;
    private javax.swing.JTextField dphn;
    private javax.swing.JTextField dscnt;
    private javax.swing.JButton dsply;
    private javax.swing.JTextField dstnc;
    private javax.swing.JTextField dt;
    private javax.swing.JButton dtls;
    private javax.swing.JTextField fre;
    private javax.swing.JButton freq;
    private javax.swing.JButton happy;
    private javax.swing.JTextField hpy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbbid;
    private javax.swing.JLabel lbcadrs;
    private javax.swing.JLabel lbcnam;
    private javax.swing.JLabel lbdoj;
    private javax.swing.JLabel lbpno;
    private javax.swing.JButton lgot;
    private javax.swing.JTextField phno;
    private javax.swing.JComboBox src;
    private javax.swing.JTextField tot;
    private javax.swing.JTextField tot1;
    // End of variables declaration//GEN-END:variables
}
